name: Dry Run DDL

on:
  push:
    branches-ignore:
      - main
    tags:
      - "*"

jobs:
  dry-run:
    name: Dry Run DDL
    runs-on: ubuntu-latest
    environment: GCP

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Install psqldef
      - name: Install psqldef
        run: |-
          curl -LO https://github.com/sqldef/sqldef/releases/download/v0.17.21/psqldef_linux_amd64.tar.gz
          tar -zxvf psqldef_linux_amd64.tar.gz
          rm -rf psqldef_linux_amd64.tar.gz
          ./psqldef --version

      # Install Cloud SQL Auth Proxy
      - name: Install Cloud SQL Auth Proxy
        run: |-
          curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.13.0/cloud-sql-proxy.linux.amd64
          chmod +x ./cloud-sql-proxy

      # Launch Cloud SQL Auth Proxy
      - name: Launch Cloud SQL Auth Proxy
        run: |-
          ./cloud-sql-proxy ${{ secrets.GCP_PROJECT }}:${{ secrets.GCP_LOCATION }}:${{ secrets.SQL_INSTANCE }} &

      # Dry Run psqldef
      - name: Dry Run psqldef
        run: |-
          ./psqldef --dry-run -h localhost -p 5432 -U ${{ secrets.SQL_USER }} -W ${{ secrets.SQL_PASSWORD }} pokemon_vg < ./ddl/pokemon_vg/*
